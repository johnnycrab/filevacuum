// Generated by CoffeeScript 1.4.0
var FileVacuum, Filestube;

if (!FileVacuum) {
  FileVacuum = {};
}

if (!Filestube) {
  Filestube = {};
}

Template.main.hasFileSearch = function() {
  if (Session.get('searchterm')) {
    return true;
  } else {
    return false;
  }
};

Template.main.hasResults = function() {
  if (Session.get('results')) {
    return true;
  } else {
    return false;
  }
};

Template.searchform.uploadedOnly = function() {
  return Session.get('uploadedOnly');
};

Template.searchform.term = function() {
  var results;
  results = Session.get('results');
  if (results && results.filestube) {
    return results.filestube.term;
  }
};

Template.filelist.results = function() {
  return Session.get('results');
};

Template.filelist.isntFirst = function(obj) {
  return obj.pageNum > 1;
};

FileVacuum.searchFor = function(term, pageNum) {
  var uploadedOnly,
    _this = this;
  pageNum = pageNum || Â 1;
  term = term || Session.get('searchterm');
  Session.set('searchterm', term);
  Session.set('results', null);
  uploadedOnly = Session.get('uploadedOnly');
  console.log('Searching for: "' + term + '" on page ' + pageNum);
  return Meteor.call('searchFilestube', term, pageNum, uploadedOnly, function(err, res) {
    var results;
    if (!err && res.length) {
      results = Session.get('results') || {};
      results.filestube = {
        pageNum: pageNum,
        term: term
      };
      results.filestube.data = res;
      return Session.set('results', results);
    } else {
      return _this.cleanup();
    }
  });
};

FileVacuum.cleanup = function() {
  console.log('cleaning up...');
  Session.set('searchterm', null);
  return Session.set('results', null);
};

Template.searchform.events = {
  'keypress input[name="file"]': function(ev) {
    var term;
    if (ev.keyCode === 13) {
      term = $(ev.target).val();
      if (term) {
        return FileVacuum.searchFor(term);
      }
    }
  },
  'click button.doSearch': function(ev) {
    var term;
    term = $(ev.target).parent().find('input').val();
    if (term) {
      return FileVacuum.searchFor(term, 1);
    }
  },
  'change input[name="ulonly"]': function(ev) {
    return Session.set('uploadedOnly', $(ev.target).attr('checked') ? true : false);
  }
};

Template.filelist.events = {
  'click .downloadLinks': function(ev) {
    return $(ev.target).select();
  },
  'click #pagination .prev': function(ev) {
    var results;
    ev.preventDefault();
    results = Session.get('results');
    FileVacuum.searchFor(null, results.filestube.pageNum - 1);
    return false;
  },
  'click #pagination .next': function(ev) {
    var results;
    ev.preventDefault();
    results = Session.get('results');
    console.log(results);
    FileVacuum.searchFor(null, results.filestube.pageNum + 1);
    return false;
  }
};
